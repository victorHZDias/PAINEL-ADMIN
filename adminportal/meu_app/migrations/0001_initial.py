# Generated by Django 5.2.4 on 2025-07-21 21:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnaliseIa',
            fields=[
                ('id_analise', models.AutoField(primary_key=True, serialize=False)),
                ('data_analise', models.DateTimeField(blank=True, null=True)),
                ('resultado_analise', models.TextField(blank=True, null=True)),
                ('entidades_nomeadas', models.TextField(blank=True, null=True)),
                ('topicos', models.TextField(blank=True, null=True)),
                ('frases_chave', models.TextField(blank=True, null=True)),
                ('resumo_texto', models.TextField(blank=True, null=True)),
                ('analise_sentimento', models.TextField(blank=True, null=True)),
                ('capitulos_automaticos', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Análise de IA',
                'verbose_name_plural': 'Análises de IA',
                'db_table': 'analise_ia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AreasAtendimento',
            fields=[
                ('id_area_atendimento', models.AutoField(primary_key=True, serialize=False)),
                ('nome_area', models.CharField(choices=[('SAC (sistema de atendimento ao cliente)', 'SAC (Sistema de Atendimento ao Cliente)'), ('vendas_telemarketing_ativo_receptivo', 'Vendas - Telemarketing Ativo/Receptivo'), ('suporte_tecnico_pos_venda', 'Suporte Técnico Pós-Vendas'), ('retencao_fidelizacao', 'Retenção e Fidelização'), ('pesquisa_satisfacao_cliente', 'Pesquisa de Satisfação do Cliente'), ('relacionamento_cliente_pos_vendas', 'Relacionamento com Cliente Pós-Vendas')], help_text='Nome da área de atendimento.', max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Área de Atendimento',
                'verbose_name_plural': 'Áreas de Atendimento',
                'db_table': 'areas_atendimento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Assinatura',
            fields=[
                ('id_assinatura', models.AutoField(primary_key=True, serialize=False)),
                ('renovacao_automatica', models.BooleanField(blank=True, null=True)),
                ('data_inicio', models.DateField()),
                ('data_fim', models.DateField(blank=True, null=True)),
                ('valor_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('ativa', 'Ativa'), ('suspensa', 'Suspensa'), ('cancelada', 'Cancelada'), ('pendente', 'Pendente'), ('expirada', 'Expirada'), ('aguardando_pagamento', 'Aguardando Pagamento')], help_text='Status atual da assinatura.', max_length=30)),
                ('data_status_atualizacao', models.DateTimeField(blank=True, null=True)),
                ('politica_cancelamento', models.TextField(blank=True, null=True)),
                ('motivo_cancelamento', models.CharField(blank=True, choices=[('preco_servico_alto', 'Preço do Serviço Alto'), ('produto_servico_nao_atendeu_necessidade', 'Produto/Serviço Não Atendeu Necessidade'), ('encontrou_outra_solucao', 'Encontrou Outra Solução'), ('outros', 'Outros')], help_text='Motivo do cancelamento da assinatura.', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Assinatura',
                'verbose_name_plural': 'Assinaturas',
                'db_table': 'assinatura',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clientes',
            fields=[
                ('id_cliente', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
                'db_table': 'clientes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DoresCliente',
            fields=[
                ('id_dor', models.AutoField(primary_key=True, serialize=False)),
                ('descricao_dor', models.CharField(choices=[('alta_taxa_churn_clientes_insatisfeitos', 'Alta Taxa de Churn / Clientes Insatisfeitos'), ('falta_conformidade_legal_regulatoria', 'Falta de Conformidade Legal/Regulatória'), ('falhas_processos_procedimentos_internos', 'Falhas em Processos e Procedimentos Internos'), ('falta_padronizacao_atendimento', 'Falta de Padronização no Atendimento'), ('alto_tempo_medio_atendimento_tma_tpr', 'Alto Tempo Médio de Atendimento (TMA/TPR)'), ('Gaps de Treinamento e Desenvolvimento de Agentes', 'Gaps de Treinamento e Desenvolvimento de Agentes')], help_text='Descrição da dor do cliente.', max_length=255, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Dor do Cliente',
                'verbose_name_plural': 'Dores do Cliente',
                'db_table': 'dores_cliente',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Equipes',
            fields=[
                ('id_equipe', models.AutoField(primary_key=True, serialize=False)),
                ('faixa_tamanho', models.CharField(choices=[('1_5', '1-5 Pessoas'), ('6_10', '6-10 Pessoas'), ('11_20', '11-20 Pessoas'), ('21_50', '21-50 Pessoas'), ('51_100', '51-100 Pessoas'), ('101_200', '101-200 Pessoas'), ('201_500', '201-500 Pessoas'), ('501_1000', '501-1000 Pessoas'), ('1001_2000', '1001-2000 Pessoas'), ('2001_5000', '2001-5000 Pessoas'), ('5001_mais', '5001+ Pessoas')], help_text='Faixa de tamanho da equipe.', max_length=50, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Equipe',
                'verbose_name_plural': 'Equipes',
                'db_table': 'equipes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FaixasFaturamento',
            fields=[
                ('id_faixa_faturamento', models.AutoField(primary_key=True, serialize=False)),
                ('descricao_faixa', models.CharField(help_text='Descrição da faixa de faturamento.', max_length=100, unique=True)),
                ('valor_minimo', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('valor_maximo', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Faixa de Faturamento',
                'verbose_name_plural': 'Faixas de Faturamento',
                'db_table': 'faixas_faturamento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GatewaysPagamento',
            fields=[
                ('id_gateway', models.AutoField(primary_key=True, serialize=False)),
                ('nome_gateway', models.CharField(max_length=100, unique=True)),
                ('url_api', models.TextField(blank=True, null=True)),
                ('credenciais_api', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Gateway de Pagamento',
                'verbose_name_plural': 'Gateways de Pagamento',
                'db_table': 'gateways_pagamento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pagamento',
            fields=[
                ('id_pagamento', models.AutoField(primary_key=True, serialize=False)),
                ('status_pagamento', models.CharField(choices=[('aprovado', 'Aprovado'), ('reprovado', 'Reprovado'), ('pendente', 'Pendente')], help_text='Status do pagamento.', max_length=20)),
                ('tipo_pagamento', models.CharField(choices=[('cartao_credito', 'Cartão de Crédito'), ('cartao_debito', 'Cartão de Débito'), ('pix', 'Pix'), ('boleto', 'Boleto')], help_text='Tipo de pagamento (Cartão de Crédito, Pix, Boleto, etc.).', max_length=20)),
                ('data_pagamento', models.DateField()),
                ('valor_pago', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
                'db_table': 'pagamento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Perguntas',
            fields=[
                ('id_pergunta', models.AutoField(primary_key=True, serialize=False)),
                ('texto_pergunta', models.TextField()),
                ('tipo_resposta', models.CharField(max_length=50)),
                ('opcoes_selecao', models.TextField(blank=True, null=True)),
                ('ativa', models.BooleanField(blank=True, null=True)),
                ('ordem_exibicao', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Pergunta',
                'verbose_name_plural': 'Perguntas',
                'db_table': 'perguntas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RespostasQuestionarioPf',
            fields=[
                ('id_resposta_pf', models.AutoField(primary_key=True, serialize=False)),
                ('resposta', models.TextField(blank=True, null=True)),
                ('data_resposta', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Resposta Questionário PF',
                'verbose_name_plural': 'Respostas Questionários PF',
                'db_table': 'respostas_questionario_pf',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RespostasQuestionarioPj',
            fields=[
                ('id_resposta_pj', models.AutoField(primary_key=True, serialize=False)),
                ('resposta', models.TextField(blank=True, null=True)),
                ('data_resposta', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Resposta Questionário PJ',
                'verbose_name_plural': 'Respostas Questionários PJ',
                'db_table': 'respostas_questionario_pj',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Servicos',
            fields=[
                ('id_servico', models.AutoField(primary_key=True, serialize=False)),
                ('nome_servico', models.CharField(help_text='Nome do serviço oferecido.', max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('ativo', models.BooleanField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Serviço',
                'verbose_name_plural': 'Serviços',
                'db_table': 'servicos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Transcricoes',
            fields=[
                ('id_transcricao', models.AutoField(primary_key=True, serialize=False)),
                ('duracao_segundos', models.IntegerField(blank=True, null=True)),
                ('custo_minutos', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('data_transcricao', models.DateTimeField(blank=True, null=True)),
                ('url_audio_original', models.TextField(blank=True, null=True)),
                ('url_transcricao_texto', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Transcrição',
                'verbose_name_plural': 'Transcrições',
                'db_table': 'transcricoes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('id_user', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('senha_hash', models.CharField(max_length=255)),
                ('nome', models.CharField(blank=True, max_length=255, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('id_funcao_fk', models.CharField(blank=True, choices=[('agente', 'Agente'), ('supervisor', 'Supervisor'), ('admin', 'Administrador')], help_text='Função do usuário no sistema.', max_length=20, null=True)),
                ('status', models.CharField(blank=True, choices=[('ativo', 'Ativo'), ('inativo', 'Inativo'), ('pendente', 'Pendente')], help_text='Status do usuário (Ativo, Inativo, Pendente).', max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'db_table': 'usuarios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientesPf',
            fields=[
                ('id_cliente_fk', models.OneToOneField(db_column='id_cliente_fk', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='meu_app.clientes')),
                ('nome', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, unique=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('genero', models.CharField(blank=True, max_length=20, null=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('id_uso_fk', models.CharField(blank=True, choices=[('pessoal', 'Pessoal'), ('profissional', 'Profissional'), ('academico', 'Acadêmico')], help_text='Tipo de uso do cliente (Pessoal, Profissional, Acadêmico).', max_length=20, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cliente Pessoa Física',
                'verbose_name_plural': 'Clientes Pessoa Física',
                'db_table': 'clientes_pf',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientesPj',
            fields=[
                ('id_cliente_fk', models.OneToOneField(db_column='id_cliente_fk', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='meu_app.clientes')),
                ('razao_social', models.CharField(max_length=255)),
                ('nome_fantasia', models.CharField(blank=True, max_length=255, null=True)),
                ('cnpj', models.CharField(max_length=18, unique=True)),
                ('email_empresa', models.CharField(max_length=255, unique=True)),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Cliente Pessoa Jurídica',
                'verbose_name_plural': 'Clientes Pessoa Jurídica',
                'db_table': 'clientes_pj',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Planos',
            fields=[
                ('id_plano', models.AutoField(primary_key=True, serialize=False)),
                ('nome_plano', models.CharField(max_length=255, unique=True)),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10)),
                ('preco_mensal', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('duracao_meses', models.IntegerField(blank=True, null=True)),
                ('codigo_plano', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('permite_cadastro_usuarios_pj', models.BooleanField(blank=True, null=True)),
                ('tipo_plano', models.CharField(choices=[('gratuito', 'Gratuito'), ('pago', 'Pago')], default='pago', help_text='Tipo de plano (Gratuito ou Pago).', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by_fk', models.ForeignKey(blank=True, db_column='created_by_fk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('updated_by_fk', models.ForeignKey(blank=True, db_column='updated_by_fk', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='planos_updated_by_fk_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Plano',
                'verbose_name_plural': 'Planos',
                'db_table': 'planos',
            },
        ),
        migrations.CreateModel(
            name='PlanoServico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('limite_uso', models.DecimalField(blank=True, decimal_places=2, help_text='Limite de uso para este serviço dentro do plano (ex: minutos, requisições).', max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plano', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meu_app.planos')),
                ('servico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='meu_app.servicos')),
            ],
            options={
                'db_table': 'plano_servicos',
                'unique_together': {('plano', 'servico')},
            },
        ),
        migrations.AddField(
            model_name='planos',
            name='servicos',
            field=models.ManyToManyField(help_text='Serviços incluídos neste plano.', related_name='planos_associados', through='meu_app.PlanoServico', to='meu_app.servicos'),
        ),
    ]
